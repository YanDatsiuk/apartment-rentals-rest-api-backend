{
    "swagger": "2.0",
    "info": {
        "title": "REST API",
        "description": "",
        "termsOfService": "Laravel, Swagger",
        "contact": {
            "email": ""
        },
        "version": "1.0.0"
    },
    "host": "appartment-rentals.dev",
    "basePath": "/v1",
    "schemes": [
        "http"
    ],
    "paths": {
        "/apartments-facilities": {
            "get": {
                "tags": [
                    "apartments-facilities"
                ],
                "description": "Get list of apartments-facilities",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include[]",
                        "in": "query",
                        "description": "List of model relations with limit and offset parameter. Example: {relationName}:limit({limit}|{offset})",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Items limit per page",
                        "required": false,
                        "type": "integer",
                        "default": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested resource collection"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/apartments-facilities/show/{id}": {
            "get": {
                "tags": [
                    "apartments-facilities"
                ],
                "description": "Get specific apartment-facility by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "apartment-facility with specified id"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/apartments-facilities/create": {
            "post": {
                "tags": [
                    "apartments-facilities"
                ],
                "description": "Create apartment-facility",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apartment-facility"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/apartments-facilities/update/{id}": {
            "patch": {
                "tags": [
                    "apartments-facilities"
                ],
                "description": "Update specific apartment-facility by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apartment-facility"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/apartments-facilities/delete/{id}": {
            "delete": {
                "tags": [
                    "apartments-facilities"
                ],
                "description": "Delete specific apartment-facility by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/apartments-types": {
            "get": {
                "tags": [
                    "apartments-types"
                ],
                "description": "Get list of apartments-types",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include[]",
                        "in": "query",
                        "description": "List of model relations with limit and offset parameter. Example: {relationName}:limit({limit}|{offset})",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Items limit per page",
                        "required": false,
                        "type": "integer",
                        "default": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested resource collection"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/apartments-types/show/{id}": {
            "get": {
                "tags": [
                    "apartments-types"
                ],
                "description": "Get specific apartment-type by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "apartment-type with specified id"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/apartments-types/create": {
            "post": {
                "tags": [
                    "apartments-types"
                ],
                "description": "Create apartment-type",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apartment-type"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/apartments-types/update/{id}": {
            "patch": {
                "tags": [
                    "apartments-types"
                ],
                "description": "Update specific apartment-type by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apartment-type"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/apartments-types/delete/{id}": {
            "delete": {
                "tags": [
                    "apartments-types"
                ],
                "description": "Delete specific apartment-type by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/apartments": {
            "get": {
                "tags": [
                    "apartments"
                ],
                "description": "Get list of apartments",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include[]",
                        "in": "query",
                        "description": "List of model relations with limit and offset parameter. Example: {relationName}:limit({limit}|{offset})",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Items limit per page",
                        "required": false,
                        "type": "integer",
                        "default": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested resource collection"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/apartments/show/{id}": {
            "get": {
                "tags": [
                    "apartments"
                ],
                "description": "Get specific apartment by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "apartment with specified id"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/apartments/create": {
            "post": {
                "tags": [
                    "apartments"
                ],
                "description": "Create apartment",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apartment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/apartments/update/{id}": {
            "patch": {
                "tags": [
                    "apartments"
                ],
                "description": "Update specific apartment by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apartment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/apartments/delete/{id}": {
            "delete": {
                "tags": [
                    "apartments"
                ],
                "description": "Delete specific apartment by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/auths-actions-groups": {
            "get": {
                "tags": [
                    "auths-actions-groups"
                ],
                "description": "Get list of auths-actions-groups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include[]",
                        "in": "query",
                        "description": "List of model relations with limit and offset parameter. Example: {relationName}:limit({limit}|{offset})",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Items limit per page",
                        "required": false,
                        "type": "integer",
                        "default": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested resource collection"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/auths-actions-groups/show/{id}": {
            "get": {
                "tags": [
                    "auths-actions-groups"
                ],
                "description": "Get specific auth-action-group by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "auth-action-group with specified id"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/auths-actions-groups/create": {
            "post": {
                "tags": [
                    "auths-actions-groups"
                ],
                "description": "Create auth-action-group",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth-action-group"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/auths-actions-groups/update/{id}": {
            "patch": {
                "tags": [
                    "auths-actions-groups"
                ],
                "description": "Update specific auth-action-group by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth-action-group"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/auths-actions-groups/delete/{id}": {
            "delete": {
                "tags": [
                    "auths-actions-groups"
                ],
                "description": "Delete specific auth-action-group by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/auths-actions": {
            "get": {
                "tags": [
                    "auths-actions"
                ],
                "description": "Get list of auths-actions",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include[]",
                        "in": "query",
                        "description": "List of model relations with limit and offset parameter. Example: {relationName}:limit({limit}|{offset})",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Items limit per page",
                        "required": false,
                        "type": "integer",
                        "default": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested resource collection"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/auths-actions/show/{id}": {
            "get": {
                "tags": [
                    "auths-actions"
                ],
                "description": "Get specific auth-action by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "auth-action with specified id"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/auths-actions/create": {
            "post": {
                "tags": [
                    "auths-actions"
                ],
                "description": "Create auth-action",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth-action"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/auths-actions/update/{id}": {
            "patch": {
                "tags": [
                    "auths-actions"
                ],
                "description": "Update specific auth-action by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth-action"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/auths-actions/delete/{id}": {
            "delete": {
                "tags": [
                    "auths-actions"
                ],
                "description": "Delete specific auth-action by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/auths-groups-users": {
            "get": {
                "tags": [
                    "auths-groups-users"
                ],
                "description": "Get list of auths-groups-users",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include[]",
                        "in": "query",
                        "description": "List of model relations with limit and offset parameter. Example: {relationName}:limit({limit}|{offset})",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Items limit per page",
                        "required": false,
                        "type": "integer",
                        "default": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested resource collection"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/auths-groups-users/show/{id}": {
            "get": {
                "tags": [
                    "auths-groups-users"
                ],
                "description": "Get specific auth-group-user by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "auth-group-user with specified id"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/auths-groups-users/create": {
            "post": {
                "tags": [
                    "auths-groups-users"
                ],
                "description": "Create auth-group-user",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth-group-user"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/auths-groups-users/update/{id}": {
            "patch": {
                "tags": [
                    "auths-groups-users"
                ],
                "description": "Update specific auth-group-user by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth-group-user"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/auths-groups-users/delete/{id}": {
            "delete": {
                "tags": [
                    "auths-groups-users"
                ],
                "description": "Delete specific auth-group-user by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/auths-groups": {
            "get": {
                "tags": [
                    "auths-groups"
                ],
                "description": "Get list of auths-groups",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include[]",
                        "in": "query",
                        "description": "List of model relations with limit and offset parameter. Example: {relationName}:limit({limit}|{offset})",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Items limit per page",
                        "required": false,
                        "type": "integer",
                        "default": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested resource collection"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/auths-groups/show/{id}": {
            "get": {
                "tags": [
                    "auths-groups"
                ],
                "description": "Get specific auth-group by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "auth-group with specified id"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/auths-groups/create": {
            "post": {
                "tags": [
                    "auths-groups"
                ],
                "description": "Create auth-group",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth-group"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/auths-groups/update/{id}": {
            "patch": {
                "tags": [
                    "auths-groups"
                ],
                "description": "Update specific auth-group by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth-group"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/auths-groups/delete/{id}": {
            "delete": {
                "tags": [
                    "auths-groups"
                ],
                "description": "Delete specific auth-group by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/bookings-statuses": {
            "get": {
                "tags": [
                    "bookings-statuses"
                ],
                "description": "Get list of bookings-statuses",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include[]",
                        "in": "query",
                        "description": "List of model relations with limit and offset parameter. Example: {relationName}:limit({limit}|{offset})",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Items limit per page",
                        "required": false,
                        "type": "integer",
                        "default": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested resource collection"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/bookings-statuses/show/{id}": {
            "get": {
                "tags": [
                    "bookings-statuses"
                ],
                "description": "Get specific booking-status by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "booking-status with specified id"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/bookings-statuses/create": {
            "post": {
                "tags": [
                    "bookings-statuses"
                ],
                "description": "Create booking-status",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booking-status"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/bookings-statuses/update/{id}": {
            "patch": {
                "tags": [
                    "bookings-statuses"
                ],
                "description": "Update specific booking-status by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booking-status"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/bookings-statuses/delete/{id}": {
            "delete": {
                "tags": [
                    "bookings-statuses"
                ],
                "description": "Delete specific booking-status by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/bookings": {
            "get": {
                "tags": [
                    "bookings"
                ],
                "description": "Get list of bookings",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include[]",
                        "in": "query",
                        "description": "List of model relations with limit and offset parameter. Example: {relationName}:limit({limit}|{offset})",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Items limit per page",
                        "required": false,
                        "type": "integer",
                        "default": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested resource collection"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/bookings/show/{id}": {
            "get": {
                "tags": [
                    "bookings"
                ],
                "description": "Get specific booking by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "booking with specified id"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/bookings/create": {
            "post": {
                "tags": [
                    "bookings"
                ],
                "description": "Create booking",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booking"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/bookings/update/{id}": {
            "patch": {
                "tags": [
                    "bookings"
                ],
                "description": "Update specific booking by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/booking"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/bookings/delete/{id}": {
            "delete": {
                "tags": [
                    "bookings"
                ],
                "description": "Delete specific booking by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/buildings": {
            "get": {
                "tags": [
                    "buildings"
                ],
                "description": "Get list of buildings",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include[]",
                        "in": "query",
                        "description": "List of model relations with limit and offset parameter. Example: {relationName}:limit({limit}|{offset})",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Items limit per page",
                        "required": false,
                        "type": "integer",
                        "default": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested resource collection"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/buildings/show/{id}": {
            "get": {
                "tags": [
                    "buildings"
                ],
                "description": "Get specific building by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "building with specified id"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/buildings/create": {
            "post": {
                "tags": [
                    "buildings"
                ],
                "description": "Create building",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/building"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/buildings/update/{id}": {
            "patch": {
                "tags": [
                    "buildings"
                ],
                "description": "Update specific building by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/building"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/buildings/delete/{id}": {
            "delete": {
                "tags": [
                    "buildings"
                ],
                "description": "Delete specific building by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/facilities": {
            "get": {
                "tags": [
                    "facilities"
                ],
                "description": "Get list of facilities",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include[]",
                        "in": "query",
                        "description": "List of model relations with limit and offset parameter. Example: {relationName}:limit({limit}|{offset})",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Items limit per page",
                        "required": false,
                        "type": "integer",
                        "default": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested resource collection"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/facilities/show/{id}": {
            "get": {
                "tags": [
                    "facilities"
                ],
                "description": "Get specific facility by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "facility with specified id"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/facilities/create": {
            "post": {
                "tags": [
                    "facilities"
                ],
                "description": "Create facility",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/facility"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/facilities/update/{id}": {
            "patch": {
                "tags": [
                    "facilities"
                ],
                "description": "Update specific facility by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/facility"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/facilities/delete/{id}": {
            "delete": {
                "tags": [
                    "facilities"
                ],
                "description": "Delete specific facility by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "users"
                ],
                "description": "Get list of users",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "include[]",
                        "in": "query",
                        "description": "List of model relations with limit and offset parameter. Example: {relationName}:limit({limit}|{offset})",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "default": ""
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer",
                        "default": 1
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Items limit per page",
                        "required": false,
                        "type": "integer",
                        "default": 10
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested resource collection"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/users/show/{id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "description": "Get specific user by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user with specified id"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/users/create": {
            "post": {
                "tags": [
                    "users"
                ],
                "description": "Create user",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/users/update/{id}": {
            "patch": {
                "tags": [
                    "users"
                ],
                "description": "Update specific user by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/users/delete/{id}": {
            "delete": {
                "tags": [
                    "users"
                ],
                "description": "Delete specific user by Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "Authorization",
                        "in": "header",
                        "description": "JWTAuthToken example - Bearer {token}",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted entity"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "description": "Login Request",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "loginParam`s",
                        "in": "body",
                        "description": "Email,Password",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Set authorization token type(JWT) in header and return AuthUser"
                    },
                    "403": {
                        "description": "Access Forbidden"
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "description": "Logout",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "x-app-authorization",
                        "in": "header",
                        "description": "Bearer token",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "NoContent"
                    },
                    "500": {
                        "description": "Token has been blacklisted"
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "description": "Register request",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/register"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Set authorization token type(JWT) in header and return AuthUser"
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/password/email": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "description": "Request a password reset link into email",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reset-link-request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        },
        "/password/reset": {
            "post": {
                "tags": [
                    "authentication"
                ],
                "description": "Reset password using token from email",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/reset"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "403": {
                        "description": "Access forbidden"
                    },
                    "default": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apartment-facility": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "apartment_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "facility_id": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "apartment-type": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string",
                    "format": "default"
                }
            }
        },
        "apartment": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "building_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "type_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "bathroom_quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "bedroom_quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "room_quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string",
                    "format": "default"
                }
            }
        },
        "auth-action-group": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "action_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "group_id": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "auth-action": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string",
                    "format": "default"
                }
            }
        },
        "auth-group-user": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "group_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "auth-group": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string",
                    "format": "default"
                }
            }
        },
        "booking-status": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string",
                    "format": "default"
                }
            }
        },
        "booking": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "appartment_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "guest_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "status_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "start_date": {
                    "type": "string",
                    "format": "date-time"
                },
                "end_date": {
                    "type": "string",
                    "format": "date-time"
                },
                "details": {
                    "type": "string",
                    "format": "default"
                }
            }
        },
        "building": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "manager_id": {
                    "type": "integer",
                    "format": "int32"
                },
                "short_name": {
                    "type": "string",
                    "format": "default"
                },
                "full_name": {
                    "type": "string",
                    "format": "default"
                },
                "description": {
                    "type": "string",
                    "format": "default"
                },
                "address": {
                    "type": "string",
                    "format": "default"
                }
            }
        },
        "facility": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "description": {
                    "type": "string",
                    "format": "default"
                }
            }
        },
        "login": {
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "register": {
            "required": [
                "name",
                "email",
                "password"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "default": "John Doe"
                },
                "email": {
                    "type": "string",
                    "default": "john.snow@mail.com"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "reset-link-request": {
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "reset": {
            "required": [
                "token",
                "email",
                "password"
            ],
            "properties": {
                "token": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "user": {
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int32"
                },
                "name": {
                    "type": "string",
                    "format": "default"
                },
                "email": {
                    "type": "string",
                    "format": "default"
                },
                "password": {
                    "type": "string",
                    "format": "default"
                },
                "remember_token": {
                    "type": "string",
                    "format": "default"
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date-time"
                }
            }
        }
    }
}